name: Weekly Velocity Chart Generator

on:
  schedule:
    # Run every Monday at 8:00 AM UTC
    - cron: '0 8 * * 1'
  workflow_dispatch:
    # Allows manual triggering of the workflow

jobs:
  generate-velocity-chart:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: read
      pull-requests: read
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas matplotlib
          
      - name: Generate velocity chart
        run: python .github/scripts/generate_velocity_chart.py
        env:
          # Using a PAT with proper permissions is recommended for accessing project data
          GITHUB_TOKEN: ${{ secrets.PROJECT_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.repository }}
      
      - name: Checkout Wiki
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}.wiki
          path: wiki
          token: ${{ secrets.PROJECT_ACCESS_TOKEN || secrets.GITHUB_TOKEN }}
      
      - name: Update Wiki with Velocity Chart
        run: |
          # Create images directory if it doesn't exist
          mkdir -p wiki/images
          
          # Copy the velocity chart to the wiki
          cp velocity_chart.png wiki/images/
          
          # Create or update the velocity page
          cat > wiki/Velocity-Chart.md << EOL
          # Sprint Velocity Chart
          
          *Last updated: $(date "+%Y-%m-%d %H:%M:%S UTC")*
          
          ![Sprint Velocity Chart](images/velocity_chart.png)
          
          ## Recent Sprint Data
          
          $(head -n 10 velocity_data.csv | python -c "
          import csv
          import sys
          
          reader = csv.reader(sys.stdin)
          headers = next(reader)
          
          print('| ' + ' | '.join(headers) + ' |')
          print('| ' + ' | '.join(['---' for _ in headers]) + ' |')
          
          for row in reader:
              print('| ' + ' | '.join(row) + ' |')
          ")
          
          *For full data, refer to the [velocity_data.csv](https://github.com/${{ github.repository }}/blob/main/velocity_data.csv) file.*
          
          ## Understanding This Chart
          
          - **Green bars**: Story points completed in each sprint
          - **Gray bars**: Story points not completed in each sprint
          - **Red dotted line**: 3-sprint rolling average velocity
          
          This chart helps track team velocity over time and can be used for sprint planning and capacity forecasting.
          
          *Generated automatically via [GitHub Actions](https://github.com/${{ github.repository }}/actions/workflows/velocity_chart.yml)*
          EOL
          
          # Commit and push changes to the wiki
          cd wiki
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add .
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update velocity chart" && git push)
          
      - name: Commit Data to Main Repository
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add velocity_chart.png velocity_data.csv
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update velocity data [skip ci]" && git push)
